// Generated by view binder compiler. Do not edit!
package com.rohitraut.thecompletemeal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.rohitraut.thecompletemeal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentBlankBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button btnCalciBMR;

  @NonNull
  public final RadioButton rb1;

  @NonNull
  public final RadioButton rb2;

  @NonNull
  public final RadioButton rb3;

  @NonNull
  public final RadioButton rb4;

  @NonNull
  public final RadioGroup rbGroup;

  private FragmentBlankBinding(@NonNull FrameLayout rootView, @NonNull Button btnCalciBMR,
      @NonNull RadioButton rb1, @NonNull RadioButton rb2, @NonNull RadioButton rb3,
      @NonNull RadioButton rb4, @NonNull RadioGroup rbGroup) {
    this.rootView = rootView;
    this.btnCalciBMR = btnCalciBMR;
    this.rb1 = rb1;
    this.rb2 = rb2;
    this.rb3 = rb3;
    this.rb4 = rb4;
    this.rbGroup = rbGroup;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentBlankBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentBlankBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_blank, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentBlankBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCalciBMR;
      Button btnCalciBMR = ViewBindings.findChildViewById(rootView, id);
      if (btnCalciBMR == null) {
        break missingId;
      }

      id = R.id.rb1;
      RadioButton rb1 = ViewBindings.findChildViewById(rootView, id);
      if (rb1 == null) {
        break missingId;
      }

      id = R.id.rb2;
      RadioButton rb2 = ViewBindings.findChildViewById(rootView, id);
      if (rb2 == null) {
        break missingId;
      }

      id = R.id.rb3;
      RadioButton rb3 = ViewBindings.findChildViewById(rootView, id);
      if (rb3 == null) {
        break missingId;
      }

      id = R.id.rb4;
      RadioButton rb4 = ViewBindings.findChildViewById(rootView, id);
      if (rb4 == null) {
        break missingId;
      }

      id = R.id.rbGroup;
      RadioGroup rbGroup = ViewBindings.findChildViewById(rootView, id);
      if (rbGroup == null) {
        break missingId;
      }

      return new FragmentBlankBinding((FrameLayout) rootView, btnCalciBMR, rb1, rb2, rb3, rb4,
          rbGroup);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
